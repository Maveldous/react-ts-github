[{"F:\\work\\react-test\\src\\index.tsx":"1","F:\\work\\react-test\\src\\App.tsx":"2","F:\\work\\react-test\\src\\store\\index.ts":"3","F:\\work\\react-test\\src\\hooks\\useActions.ts":"4","F:\\work\\react-test\\src\\hooks\\useTypedSelector.ts":"5","F:\\work\\react-test\\src\\store\\reducers\\index.ts":"6","F:\\work\\react-test\\src\\store\\action-creators\\index.ts":"7","F:\\work\\react-test\\src\\services\\http.ts":"8","F:\\work\\react-test\\src\\components\\pages\\ProfilePage.tsx":"9","F:\\work\\react-test\\src\\components\\pages\\UserListPage.tsx":"10","F:\\work\\react-test\\src\\components\\common\\CInput.tsx":"11","F:\\work\\react-test\\src\\hooks\\useInput.ts":"12","F:\\work\\react-test\\src\\store\\reducers\\profileReducer.ts":"13","F:\\work\\react-test\\src\\types\\profile.ts":"14","F:\\work\\react-test\\src\\store\\action-creators\\profile.ts":"15","F:\\work\\react-test\\src\\components\\Profile.tsx":"16","F:\\work\\react-test\\src\\store\\reducers\\repositoryReducer.ts":"17","F:\\work\\react-test\\src\\types\\repository.ts":"18","F:\\work\\react-test\\src\\components\\RepositoryList.tsx":"19","F:\\work\\react-test\\src\\store\\action-creators\\repository.ts":"20","F:\\work\\react-test\\src\\hooks\\useSearch.ts":"21","F:\\work\\react-test\\src\\types\\user.ts":"22","F:\\work\\react-test\\src\\store\\reducers\\userReducer.ts":"23","F:\\work\\react-test\\src\\store\\action-creators\\user.ts":"24","F:\\work\\react-test\\src\\components\\UserList.tsx":"25"},{"size":387,"mtime":1639682236082,"results":"26","hashOfConfig":"27"},{"size":644,"mtime":1639526249881,"results":"28","hashOfConfig":"27"},{"size":203,"mtime":1639490414845,"results":"29","hashOfConfig":"27"},{"size":274,"mtime":1639490414845,"results":"30","hashOfConfig":"27"},{"size":192,"mtime":1639490414845,"results":"31","hashOfConfig":"27"},{"size":392,"mtime":1639682547350,"results":"32","hashOfConfig":"27"},{"size":272,"mtime":1639682450477,"results":"33","hashOfConfig":"27"},{"size":162,"mtime":1639497303341,"results":"34","hashOfConfig":"27"},{"size":1772,"mtime":1639677190305,"results":"35","hashOfConfig":"27"},{"size":1262,"mtime":1639682493800,"results":"36","hashOfConfig":"27"},{"size":319,"mtime":1639522994772,"results":"37","hashOfConfig":"27"},{"size":589,"mtime":1639522994244,"results":"38","hashOfConfig":"27"},{"size":778,"mtime":1639558729554,"results":"39","hashOfConfig":"27"},{"size":954,"mtime":1639576543353,"results":"40","hashOfConfig":"27"},{"size":939,"mtime":1639574067949,"results":"41","hashOfConfig":"27"},{"size":1241,"mtime":1639662596501,"results":"42","hashOfConfig":"27"},{"size":845,"mtime":1639659930316,"results":"43","hashOfConfig":"27"},{"size":988,"mtime":1639673961220,"results":"44","hashOfConfig":"27"},{"size":1485,"mtime":1639676074613,"results":"45","hashOfConfig":"27"},{"size":834,"mtime":1639682457891,"results":"46","hashOfConfig":"27"},{"size":902,"mtime":1639677189721,"results":"47","hashOfConfig":"27"},{"size":671,"mtime":1639682066209,"results":"48","hashOfConfig":"27"},{"size":730,"mtime":1639682534976,"results":"49","hashOfConfig":"27"},{"size":922,"mtime":1639682379731,"results":"50","hashOfConfig":"27"},{"size":992,"mtime":1639682490409,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1yn63xh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\work\\react-test\\src\\index.tsx",[],["107","108"],"F:\\work\\react-test\\src\\App.tsx",[],"F:\\work\\react-test\\src\\store\\index.ts",[],"F:\\work\\react-test\\src\\hooks\\useActions.ts",[],"F:\\work\\react-test\\src\\hooks\\useTypedSelector.ts",[],"F:\\work\\react-test\\src\\store\\reducers\\index.ts",[],"F:\\work\\react-test\\src\\store\\action-creators\\index.ts",["109"],"F:\\work\\react-test\\src\\services\\http.ts",[],"F:\\work\\react-test\\src\\components\\pages\\ProfilePage.tsx",["110","111"],"import { useState, useEffect, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { useInput, InputInfo } from \"../../hooks/useInput\";\r\nimport { useSearch } from \"../../hooks/useSearch\";\r\n\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\n\r\nimport Profile from \"../Profile\";\r\nimport RepositoryList from \"../RepositoryList\";\r\nimport CInput from '../common/CInput';\r\n\r\nimport { RespRepository } from \"../../types/repository\";\r\n\r\nconst ProfilePage = () => {\r\n  const location = useLocation();\r\n  const [searchResultRepos, setSearchResultRepos] = useState<RespRepository[] | null>([])\r\n  const inputSearch: InputInfo = useInput('');\r\n  const {query, repositories} = useTypedSelector(state => state.repository)\r\n\r\n  const getQuery = useCallback(() => new URLSearchParams(location.search).get('query') || '', [location.search])\r\n  \r\n  const setVisibleRepos = (input: string) => {\r\n    if (repositories) {\r\n      setSearchResultRepos(repositories.filter(item => item.name.includes(input)))\r\n    }\r\n  };\r\n  const setAllRepos = () => { setSearchResultRepos(repositories); };\r\n\r\n  const debouncedFetch = useSearch({query: query || '', fetchCallback: setVisibleRepos, emptyCallback: setAllRepos}, [repositories]);\r\n\r\n  useEffect(() => {\r\n    if (getQuery() !== inputSearch.value) {\r\n      debouncedFetch(inputSearch.value)\r\n    } else {\r\n      setVisibleRepos(inputSearch.value)\r\n    }\r\n  }, [inputSearch.value, repositories])\r\n\r\n  useEffect(() => {\r\n    inputSearch.setInputValue(getQuery());\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Profile />\r\n      <hr />\r\n      <CInput\r\n        {...inputSearch.bind}\r\n      />\r\n      <RepositoryList visibleRepositories={searchResultRepos}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","F:\\work\\react-test\\src\\components\\pages\\UserListPage.tsx",["112"],"F:\\work\\react-test\\src\\components\\common\\CInput.tsx",[],"F:\\work\\react-test\\src\\hooks\\useInput.ts",[],"F:\\work\\react-test\\src\\store\\reducers\\profileReducer.ts",[],"F:\\work\\react-test\\src\\types\\profile.ts",[],"F:\\work\\react-test\\src\\store\\action-creators\\profile.ts",[],"F:\\work\\react-test\\src\\components\\Profile.tsx",["113"],"import React, { useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst Profile: React.FC = () => {\r\n\r\n  const params = useParams();\r\n  const {id, loading, error, profile} = useTypedSelector(state => state.profile)\r\n  const {fetchProfile} = useActions()\r\n\r\n  useEffect(() => {\r\n    if (id !== params.id) {\r\n      fetchProfile(params.id);\r\n    }\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <span>Loading...</span>\r\n  }\r\n\r\n  if (error) {\r\n    return <span>{error}</span>\r\n  }\r\n\r\n  if (!profile) {\r\n    return <div></div>\r\n  }\r\n\r\n  return <div>\r\n    <div>\r\n      <img src={profile.avatar_url} alt=\"Profile avatar\" />\r\n    </div>\r\n    <ul>\r\n      <li>\r\n        {profile.name || '-'}\r\n      </li>\r\n      <li>\r\n        {profile.email || '-'}\r\n      </li>\r\n      <li>\r\n        {profile.location || '-'}\r\n      </li>\r\n      <li>\r\n        {profile.created_at}\r\n      </li>\r\n      <li>\r\n        {profile.followers} Followers\r\n      </li>\r\n      <li>\r\n      Following {profile.following}\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      {profile.bio || 'none'}\r\n    </p>\r\n  </div>\r\n}\r\n\r\nexport default React.memo(Profile);","F:\\work\\react-test\\src\\store\\reducers\\repositoryReducer.ts",[],"F:\\work\\react-test\\src\\types\\repository.ts",[],"F:\\work\\react-test\\src\\components\\RepositoryList.tsx",["114","115"],"import React, { createElement, useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nimport { RespRepository } from \"../types/repository\";\r\n\r\ninterface RepositoryListProps {\r\n  visibleRepositories: null | RespRepository[],\r\n}\r\n\r\nconst RepositoryList: React.FC<RepositoryListProps> = ({visibleRepositories}) => {\r\n\r\n  const params = useParams();\r\n  const {loading, error} = useTypedSelector(state => state.repository)\r\n  const {id} = useTypedSelector(state => state.profile)\r\n  const {fetchRepositories} = useActions()\r\n\r\n  const redirectRepository = (url:string) => {\r\n    window.open(url, \"_blank\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id !== params.id) {\r\n      fetchRepositories(params.id);\r\n    }\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <span>Loading...</span>\r\n  }\r\n\r\n  if (error) {\r\n    return <span>{error}</span>\r\n  }\r\n\r\n  if (!visibleRepositories) {\r\n    return <div></div>\r\n  }\r\n\r\n  return <ul>\r\n    {visibleRepositories.map(({id, name, forks_count, stargazers_count, html_url}) => \r\n      <li key={id} onClick={() => redirectRepository(html_url)}>\r\n        <div>\r\n          {name}\r\n        </div>\r\n        <div>\r\n          <div>\r\n            {forks_count} forks\r\n          </div>\r\n          <div>\r\n            {stargazers_count} stars\r\n          </div>\r\n        </div>\r\n      </li>\r\n    )}\r\n  </ul>\r\n}\r\n\r\nexport default RepositoryList","F:\\work\\react-test\\src\\store\\action-creators\\repository.ts",[],"F:\\work\\react-test\\src\\hooks\\useSearch.ts",["116"],"import { useCallback } from \"react\";\r\nimport { useNavigate, useLocation }from \"react-router-dom\";\r\nimport { debounce } from \"lodash\";\r\n\r\ntype useSearchProps = {\r\n  query: string,\r\n  fetchCallback: Function,\r\n  emptyCallback: Function,\r\n}\r\n\r\nexport const useSearch = ({query, fetchCallback, emptyCallback}: useSearchProps, dependencies: any[]): Function => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const debouncedFetch = useCallback(\r\n    debounce((input:string): void => {\r\n      if (!input) {\r\n        emptyCallback([])\r\n        return\r\n      }\r\n      \r\n      if (query === input) {\r\n        return\r\n      }\r\n\r\n      const params = new URLSearchParams({query: input})\r\n      navigate({pathname: location.pathname, search: params.toString()}, {replace: true})\r\n  \r\n      fetchCallback(input)\r\n    }\r\n    , 1000),\r\n    dependencies\r\n  )\r\n\r\n  return debouncedFetch;\r\n}","F:\\work\\react-test\\src\\types\\user.ts",[],"F:\\work\\react-test\\src\\store\\reducers\\userReducer.ts",[],"F:\\work\\react-test\\src\\store\\action-creators\\user.ts",[],"F:\\work\\react-test\\src\\components\\UserList.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":1,"nodeType":"123","endLine":9,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":38,"column":6,"nodeType":"126","endLine":38,"endColumn":39,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":42,"column":6,"nodeType":"126","endLine":42,"endColumn":8,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":32,"column":6,"nodeType":"126","endLine":32,"endColumn":8,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":17,"column":6,"nodeType":"126","endLine":17,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":28,"column":6,"nodeType":"126","endLine":28,"endColumn":8,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"140","line":15,"column":26,"nodeType":"136","endLine":15,"endColumn":37},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'debouncedFetch', 'getQuery', and 'setVisibleRepos'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'getQuery' and 'inputSearch'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'inputSearch' and 'location.search'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'fetchProfile', 'id', and 'params.id'. Either include them or remove the dependency array.",["146"],"@typescript-eslint/no-unused-vars","'createElement' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchRepositories', 'id', and 'params.id'. Either include them or remove the dependency array.",["147"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [debouncedFetch, getQuery, inputSearch.value, repositories, setVisibleRepos]",{"range":"158","text":"159"},"Update the dependencies array to be: [getQuery, inputSearch]",{"range":"160","text":"161"},"Update the dependencies array to be: [inputSearch, location.search]",{"range":"162","text":"163"},"Update the dependencies array to be: [fetchProfile, id, params.id]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchRepositories, id, params.id]",{"range":"166","text":"167"},[1431,1464],"[debouncedFetch, getQuery, inputSearch.value, repositories, setVisibleRepos]",[1539,1541],"[getQuery, inputSearch]",[1097,1099],"[inputSearch, location.search]",[492,494],"[fetchProfile, id, params.id]",[845,847],"[fetchRepositories, id, params.id]"]